CREATE OR REPLACE FUNCTION popular_funcionarios_e_motoboys(
    qtd_funcionarios INT,
    qtd_motoboys INT
)
RETURNS TEXT AS $$
DECLARE
    nomes TEXT[] := ARRAY['Carlos','Felipe','Ricardo','Lucas','Márcio','Pedro','Roberto','Paulo','Thiago','Vitor'];
    sobrenomes TEXT[] := ARRAY['Silva','Santos','Oliveira','Pereira','Costa','Rodrigues','Almeida','Nascimento','Fernandes','Lima'];
    telefone TEXT;
    email TEXT;
    cpf TEXT;
    usuario TEXT;
    senha TEXT := 'senha123';
    i INT;
    novo_id INT;
    motoboy_count INT := 0;
    funcionarios_ids INT[] := '{}';
    nome_completo TEXT;
    funcionario_para_motoboy RECORD;
BEGIN
    -- Validar parâmetros
    IF qtd_motoboys > qtd_funcionarios THEN
        RETURN 'Erro: Quantidade de motoboys não pode ser maior que quantidade de funcionários';
    END IF;
    
    -- Popular tabela de funcionários
    FOR i IN 1..qtd_funcionarios LOOP
        -- Gerar dados fictícios
        nome_completo := nomes[1 + (i % array_length(nomes, 1))] || ' ' || sobrenomes[1 + (i % array_length(sobrenomes, 1))];
        telefone := '1' || lpad((floor(random() * 999999999))::text, 9, '0');
        email := lower(replace(nome_completo, ' ', '')) || i || '@empresa.com';
        cpf := lpad((floor(random() * 99999999999))::text, 11, '0');
        usuario := lower(replace(nome_completo, ' ', '')) || i;
        
        -- Tentar inserir funcionário (pode falhar por CPF/email/usuario duplicado)
        BEGIN
            INSERT INTO gerenciador_de_funcionarios_funcionario (
                nome, 
                cpf,
                email,
                usuario,
                senha
            ) VALUES (
                nome_completo,
                cpf,
                email,
                usuario,
                senha
            ) RETURNING id INTO novo_id;
            
            -- Se chegou aqui, inserção foi bem-sucedida
            -- Verificar se deve ser motoboy
            IF motoboy_count < qtd_motoboys THEN
                -- Inserir na tabela de motoboys
                INSERT INTO gerenciador_de_motoboys_motoboy (
                    nome, 
                    telefone, 
                    placa, 
                    funcionario_id, 
                    usuario, 
                    senha
                ) VALUES (
                    nome_completo,
                    telefone,
                    'ABC' || lpad((floor(random() * 10000))::text, 4, '0'),
                    novo_id,
                    'motoboy' || (motoboy_count + 1),
                    senha
                );
                
                motoboy_count := motoboy_count + 1;
                funcionarios_ids := array_append(funcionarios_ids, novo_id);
            END IF;
            
        EXCEPTION WHEN unique_violation THEN
            CONTINUE; -- Pula para o próximo se houver violação de unicidade
        END;
    END LOOP;
    
    -- Se não atingiu a quantidade necessária de motoboys
    IF motoboy_count < qtd_motoboys THEN
        FOR j IN 1..(qtd_motoboys - motoboy_count) LOOP
            -- Encontrar um funcionário que não é motoboy
            SELECT f.id, f.nome INTO funcionario_para_motoboy
            FROM gerenciador_de_funcionarios_funcionario f
            LEFT JOIN gerenciador_de_motoboys_motoboy m ON f.id = m.funcionario_id
            WHERE m.id IS NULL
            LIMIT 1;
            
            IF NOT FOUND THEN
                EXIT; -- Sai do loop se não encontrar mais funcionários
            END IF;
            
            -- Obter telefone aleatório para o motoboy
            telefone := '1' || lpad((floor(random() * 999999999))::text, 9, '0');
            
            -- Inserir na tabela de motoboys
            INSERT INTO gerenciador_de_motoboys_motoboy (
                nome, 
                telefone, 
                placa, 
                funcionario_id, 
                usuario, 
                senha
            ) VALUES (
                funcionario_para_motoboy.nome,
                telefone,
                'ABC' || lpad((floor(random() * 10000))::text, 4, '0'),
                funcionario_para_motoboy.id,
                'motoboy' || (motoboy_count + j),
                senha
            );
            
            motoboy_count := motoboy_count + 1;
        END LOOP;
    END IF;
    
    RETURN 'Sucesso: ' || (SELECT COUNT(*) FROM gerenciador_de_funcionarios_funcionario) || 
           ' funcionários criados, sendo ' || motoboy_count || ' motoboys';
END;
$$ LANGUAGE plpgsql;
